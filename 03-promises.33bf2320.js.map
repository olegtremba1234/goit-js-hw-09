{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OACpEO,QAAMC,IAAI,uBAAwCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAE3DS,OAAM,SAAAP,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOM,QAAQ,sBAAuCJ,OAAfP,EAAS,QAAYO,OAANN,EAAM,OACnEO,QAAMC,IAAI,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IArCpCW,SAASC,cAAc,SAC/BC,iBAAiB,UAElC,SAAqBC,GACnBA,EAAIC,iBAOJ,IANA,IAAgCC,EAAAF,EAAIG,cAA5BjB,EAAwBgB,EAAxBhB,MAAOkB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEjBC,EAAaC,OAAOrB,EAAMsB,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAeH,OAAOF,EAAOG,OAE1BvB,EAAW,EAAGA,GAAYyB,EAAczB,GAAY,EAC3DV,EAAcU,EAAUqB,GACxBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formClassElement = document.querySelector('.form');\nformClassElement.addEventListener('submit', onbtnSubmit);\n\nfunction onbtnSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  let delayFirst = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    createPromise(position, delayFirst);\n    delayFirst += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","step","amount","delayFirst","Number","value","stepDelay","amountNumber"],"version":3,"file":"03-promises.33bf2320.js.map"}